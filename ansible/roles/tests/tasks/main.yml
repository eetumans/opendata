---

- name: Create SOLR core for testing
  synchronize:
    src: /usr/share/solr/
    dest: /etc/solr/ckan/
  delegate_to: "{{ inventory_hostname }}"

- name: Copy solr.xml to enable SOLR core
  copy:
    src: solr.xml
    dest: /etc/solr/solr.xml
    owner: root
    group: root

- name: Ensure Jetty is restarted (needs to be restarted before starting ckan)
  service:
    name: jetty8
    state: restarted

- name: Stop apache to drop open sql connections
  service:
    name: apache2
    state: stopped
  notify:
    - Restart Apache

- name: Create database user for testing
  postgresql_user:
    user: "ckan_test"
    password: "pass"
  become_user: postgres
  become: yes

- name: Create database datastore user for testing
  postgresql_user:
    user: "datastore_test"
    password: "pass"
  become_user: postgres
  become: yes


- name: Drop ckan test database if it exists
  postgresql_db:
    name: "ckan_test"
    owner: "ckan_test"
    state: absent
  become_user: postgres
  become: yes
  ignore_errors: True

- name: Create database for testing
  postgresql_db:
    name: "ckan_test"
    owner: "ckan_test"
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
  become_user: postgres
  become: yes
  ignore_errors: True

- name: Create datastore database for testing
  postgresql_db:
    name: "datastore_test"
    owner: "datastore_test"
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
  become_user: postgres
  become: yes
  ignore_errors: True

- name: Spatial table references
  command: psql -d "ckan_test" -f "{{ item }}"
  with_items:
  - "/usr/share/postgresql/9.5/contrib/postgis-2.2/postgis.sql"
  - "/usr/share/postgresql/9.5/contrib/postgis-2.2/spatial_ref_sys.sql"
  become_user: postgres
  become: yes

- name: Spatial table rights
  command: psql -d "ckan_test" -c "{{ item }}"
  with_items:
  - "ALTER TABLE spatial_ref_sys OWNER TO ckan_test;"
  - "ALTER TABLE geometry_columns OWNER TO ckan_test;"
  become_user: postgres
  become: yes


- name: Include ckan vars for ckan.ini templating
  include_vars:
    file: "{{ item }}"
  with_items:
    - "{{ playbook_dir }}/roles/ckan/vars/main.yml"
    - "{{ playbook_dir }}/roles/ckan/defaults/main.yml"


- name: Create ckan.ini for testing
  template:
    src: "{{ playbook_dir }}/roles/ckan/templates/ckan.ini.j2"
    dest: /etc/ckan/default/test.ini

- name: Create apache.wsgi for testing
  template:
    src: "apache_test.wsgi.j2"
    dest: /etc/ckan/default/apache_test.wsgi

- name: Copy Apache configuration for testing
  template:
    src: "apache2_test.j2"
    dest: "/etc/apache2/sites-available/ytp_test.conf"
    mode: "0644"
    owner: root
    group: root

- name: Enable Apache configuration for testing
  file:
    src: "/etc/apache2/sites-available/ytp_test.conf"
    dest: /etc/apache2/sites-enabled/ytp_test.conf
    state: link
    owner: root
    group: root
  notify:
    - Restart Apache


- name: Ensure ckan_test log file exists
  file:
    path: "{{ ckan_log_path }}/ckan_test.log"
    state: touch
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
    mode: 0640


- name: Include nginx vars for nginx templating
  include_vars:
    file: "{{ item }}"
  with_items:
  - "{{ playbook_dir }}/roles/nginx/defaults/main.yml"


- name: Copy nginx snippets file for testing
  template:
    src: "{{ item.template }}"
    dest: "/etc/nginx/snippets/{{ item.destination }}"
    mode: "0644"
    owner: root
    group: root
  with_items:
  - { 'template':'{{ playbook_dir }}/roles/nginx/templates/server.config.j2', 'destination':'ytp_test.conf', 'root_redirect': "{{ hostname_language }}" }


- name: Copy Nginx sites for testing
  template:
    src: "{{ item.template }}"
    dest: "/etc/nginx/{{ item.destination }}"
    mode: "0644"
    owner: root
    group: root
  with_items:
  - { 'template':'{{ playbook_dir }}/roles/nginx/templates/nginx_site_config.j2', 'destination':'sites-available/ytp_test', 'server_name': "{{ hostname }}", 'snippet': 'ytp_test.conf', 'base_hostname': "{{ base_hostname }}" }

- name: Enable Nginx site for testing
  file:
    src: "/etc/nginx/sites-available/{{ item }}"
    dest: "/etc/nginx/sites-enabled/{{ item }}"
    state: link
  with_items:
  - "ytp_test"
  notify:
    - Restart Nginx


- name: Initialize CKAN database
  shell: ./bin/paster --plugin=ckan db init --config=/etc/ckan/default/test.ini chdir="{{ virtual_environment }}"

- name: Initialize request database
  shell: "{{ virtual_environment }}/bin/paster --plugin=ckanext-ytp_request initdb --config=/etc/ckan/default/test.ini chdir='{{ virtual_environment }}'"

- name: Initialize Harvester database
  shell: "{{ virtual_environment }}/bin/paster --plugin=ckanext-harvest harvester initdb '--config=/etc/ckan/default/test.ini' chdir='{{ virtual_environment }}'"

- name: Initialize spatial database
  shell: "{{ virtual_environment }}/bin/paster --plugin=ckanext-spatial spatial initdb '--config=/etc/ckan/default/test.ini' chdir='{{ virtual_environment }}'"

- name: Initialize archiver database
  shell: "{{ virtual_environment }}/bin/paster --plugin=ckanext-archiver archiver init '--config=/etc/ckan/default/test.ini' chdir='{{ virtual_environment }}'"
  when: "'ckanext-archiver' in ckan_extensions"

- name: Initialize QA database
  shell: "{{ virtual_environment }}/bin/paster --plugin=ckanext-qa qa init '--config=/etc/ckan/default/test.ini' chdir='{{ virtual_environment }}'"
  when: "'ckanext-qa' in ckan_extensions"

- name: Initialize report database
  shell: "{{ virtual_environment }}/bin/paster --plugin=ckanext-report report initdb '--config=/etc/ckan/default/test.ini' chdir='{{ virtual_environment }}'"

- name: Initialize googleanalytics database
  shell: "{{ virtual_environment }}/bin/paster --plugin=ckanext-googleanalytics googleanalytics init '--config=/etc/ckan/default/test.ini' chdir='{{ virtual_environment }}'"

- name: Clear solr
  shell: ./bin/paster --plugin=ckan search-index clear --config=/etc/ckan/default/test.ini chdir="{{ virtual_environment }}"


