---

- name: Clear cache directory
  file: path="{{ cache_path }}" state=absent
  when: clear_all_cache
  tags:
  - common
  - clear-cache

- include: timezone.yml

- name: Set hostname
  command: hostname {{ hostname }}
  register: hostname_update
  tags:
  - common
  - non-local
  - has-hostname

#- name: Update hostname
#  command: service hostname start
#  when: hostname_update|changed
#  tags:
#  - common
#  - non-local
#  - has-hostname

- name: Copy environment
  template: src="environment.j2" dest="/etc/environment" mode="0644" owner=root group=root
  tags:
  - common

- name: Remove reboots
  cron: name="reboot" state=absent
  tags:
  - non-local
  - ckan
  - cron

- name: Copy apt sources.list
  template: src="sources.list.j2" dest="/etc/apt/sources.list" mode="0644" owner=root group=root
  when: apt_source_url != false
  tags:
  - packages
  - common


- name: Add NodeSource GPG key
  apt_key:
    data: "{{ lookup('file', 'nodesource.gpg.key') }}"
  tags:
   - packages
   - common


- name: Add NodeSource APT repository
  apt_repository:
    repo: 'deb https://deb.nodesource.com/node_8.x {{ ansible_distribution_release }} main'
  tags:
     - packages
     - common

- name: Remove old NodeSource APT repository
  apt_repository:
    repo: 'deb https://deb.nodesource.com/node_0.12 {{ ansible_distribution_release }} main'
    state: absent
  tags:
     - packages
     - common


#- name: Add nodejs repository
#  apt_repository: repo='ppa:chris-lea/node.js'
#  tags:
#  - packages
#  - common



- name: Update packages
  apt: upgrade=dist update_cache=yes
  when: travis is not defined
  tags:
  - packages
  - common

- name: sshd configuration file update
  template: src=sshd_config.j2 dest="/etc/ssh/sshd_config" 
    mode="0644" owner=root group=root
    backup=yes validate='/usr/sbin/sshd -T -f %s'
  tags:
  - non-local
  - common
  notify:
  - restart sshd

- name: Ensure ansible requirements
  action: apt pkg="{{ item }}" state=latest
  with_items:
    - python-psycopg2
    - python-virtualenv
  tags:
  - packages
  - common

# TODO: Move this to roles where packages are used even those are duplicate
- name: Ensure common packages
  action: apt pkg="{{ item }}" state=latest
  with_items:
    - libpq5
    - git-core
    - zip
    - unzip
    - gettext
    - build-essential
    - nodejs
    - libcurl4-openssl-dev
  tags:
  - packages
  - common

#- name: Upgrade npm
#  command: 'npm -g install npm@2.1.12'
#  tags:
#  - packages
#  - common


# TODO: Move path creation where paths are used even those are duplicate
- name: Create common paths
  file: path="{{ item }}" state=directory
  with_items: "{{ all_paths }}"
  tags:
  - common

