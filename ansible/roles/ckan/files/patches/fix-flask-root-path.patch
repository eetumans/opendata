From 7b12aac9f2cc3478b3d07e0aa0a8d52b443a14f6 Mon Sep 17 00:00:00 2001
From: Sergey Motornyuk <sergey.motornyuk@linkdigital.com.au>
Date: Tue, 2 Oct 2018 14:59:48 +0300
Subject: [PATCH 1/2] Correctly handles site_root in Flask requests

---
 ckan/lib/helpers.py            | 28 +++++++++++++++++++++++++---
 ckan/tests/lib/test_helpers.py | 10 ++++++++++
 2 files changed, 35 insertions(+), 3 deletions(-)

diff --git a/ckan/lib/helpers.py b/ckan/lib/helpers.py
index 6444e7a7d6..c52361c931 100644
--- a/ckan/lib/helpers.py
+++ b/ckan/lib/helpers.py
@@ -316,7 +316,9 @@ def url_for(*args, **kw):
             raise Exception('API URLs must specify the version (eg ver=3)')
 
     _auto_flask_context = _get_auto_flask_context()
-
+    # If url generated by werkzeug, site_root will be prepended
+    # automatically.
+    is_url_generated_by_werkzeug = True
     try:
         if _auto_flask_context:
             _auto_flask_context.push()
@@ -331,13 +333,15 @@ def url_for(*args, **kw):
 
         # If it doesn't succeed, fallback to the Pylons router
         my_url = _url_for_pylons(*args, **kw)
+        # Pylons does not add current site_root
+        is_url_generated_by_werkzeug = False
     finally:
         if _auto_flask_context:
             _auto_flask_context.pop()
 
     # Add back internal params
     kw['__ckan_no_root'] = no_root
-
+    kw['__is_url_generated_by_werkzeug'] = is_url_generated_by_werkzeug
     # Rewrite the URL to take the locale and root_path into account
     return _local_url(my_url, locale=locale, **kw)
 
@@ -490,6 +494,16 @@ def _local_url(url_to_amend, **kw):
     default_locale = False
     locale = kw.pop('locale', None)
     no_root = kw.pop('__ckan_no_root', False)
+
+    # Werkzeug adds generates url that includes enviroment variable
+    # SCRIPT_NAME. This means we have conflict with our custom logic
+    # that attaches site_root. Anyway, Werkzeug cannot handle current
+    # locale, so we are going to make some cleanup.
+    is_url_generated_by_werkzeug = kw.pop(
+        '__is_url_generated_by_werkzeug', False
+    )
+    is_script_name_added = False
+
     allowed_locales = ['default'] + i18n.get_locales()
     if locale and locale not in allowed_locales:
         locale = None
@@ -497,12 +511,21 @@ def _local_url(url_to_amend, **kw):
         if locale == 'default':
             default_locale = True
     else:
+        # Test environment doesn't have request object configured
+        # in many cases, that's why next try/except block is required.
         try:
             locale = request.environ.get('CKAN_LANG')
             default_locale = request.environ.get('CKAN_LANG_IS_DEFAULT', True)
+            script_name = request.environ.get('SCRIPT_NAME', None)
+            is_script_name_added = (
+                script_name and url_to_amend.startswith(script_name)
+            )
         except TypeError:
             default_locale = True
 
+    if is_url_generated_by_werkzeug and is_script_name_added:
+        url_to_amend = url_to_amend[len(script_name):]
+
     root = ''
     if kw.get('qualified', False):
         # if qualified is given we want the full url ie http://...
@@ -543,7 +566,6 @@ def _local_url(url_to_amend, **kw):
     if url == '/packages':
         error = 'There is a broken url being created %s' % kw
         raise ckan.exceptions.CkanUrlException(error)
-
     return url
 
 
diff --git a/ckan/tests/lib/test_helpers.py b/ckan/tests/lib/test_helpers.py
index 6f9966237c..a53fa8e9ca 100644
--- a/ckan/tests/lib/test_helpers.py
+++ b/ckan/tests/lib/test_helpers.py
@@ -199,6 +199,16 @@ def test_url_for_qualified_with_root_path_locale_and_script_name_env(self):
                                   locale='de')
         eq_(generated_url, url)
 
+    @helpers.set_extra_environ('SCRIPT_NAME', '/my/custom/path')
+    @helpers.change_config('ckan.site_url', 'http://example.com')
+    @helpers.change_config('ckan.root_path', '/my/custom/path/{{LANG}}/foo')
+    def test_url_for_with_root_path_locale_and_script_name_env(self):
+        url = '/my/custom/path/de/foo/dataset/my_dataset'
+        generated_url = h.url_for('dataset.read',
+                                  id='my_dataset',
+                                  locale='de')
+        eq_(generated_url, url)
+
 
 class TestHelpersUrlForFlaskandPylons2(BaseUrlFor):
 

From 88fddd4a42a57e3cfdb1edcf6cd6666d984dc8e4 Mon Sep 17 00:00:00 2001
From: Sergey Motornyuk <sergey.motornyuk@linkdigital.com.au>
Date: Mon, 8 Oct 2018 11:42:55 +0300
Subject: [PATCH 2/2] Remove SCRIPT_NAME in middleware

---
 ckan/config/middleware/flask_app.py |  6 ++++++
 ckan/lib/helpers.py                 | 28 +++-------------------------
 2 files changed, 9 insertions(+), 25 deletions(-)

diff --git a/ckan/config/middleware/flask_app.py b/ckan/config/middleware/flask_app.py
index 4293d82b37..75f9defb1c 100644
--- a/ckan/config/middleware/flask_app.py
+++ b/ckan/config/middleware/flask_app.py
@@ -368,6 +368,12 @@ def can_handle_request(self, environ):
         the route was defined.
         '''
 
+        # Disable built-in flask's ability to prepend site root to
+        # generated url, as we are going to use locale and existing
+        # logic is not flexible enough for this purpose
+        if 'SCRIPT_NAME' in environ:
+            environ['SCRIPT_NAME'] = ''
+
         urls = self.url_map.bind_to_environ(environ)
         try:
             rule, args = urls.match(return_rule=True)
diff --git a/ckan/lib/helpers.py b/ckan/lib/helpers.py
index c52361c931..6444e7a7d6 100644
--- a/ckan/lib/helpers.py
+++ b/ckan/lib/helpers.py
@@ -316,9 +316,7 @@ def url_for(*args, **kw):
             raise Exception('API URLs must specify the version (eg ver=3)')
 
     _auto_flask_context = _get_auto_flask_context()
-    # If url generated by werkzeug, site_root will be prepended
-    # automatically.
-    is_url_generated_by_werkzeug = True
+
     try:
         if _auto_flask_context:
             _auto_flask_context.push()
@@ -333,15 +331,13 @@ def url_for(*args, **kw):
 
         # If it doesn't succeed, fallback to the Pylons router
         my_url = _url_for_pylons(*args, **kw)
-        # Pylons does not add current site_root
-        is_url_generated_by_werkzeug = False
     finally:
         if _auto_flask_context:
             _auto_flask_context.pop()
 
     # Add back internal params
     kw['__ckan_no_root'] = no_root
-    kw['__is_url_generated_by_werkzeug'] = is_url_generated_by_werkzeug
+
     # Rewrite the URL to take the locale and root_path into account
     return _local_url(my_url, locale=locale, **kw)
 
@@ -494,16 +490,6 @@ def _local_url(url_to_amend, **kw):
     default_locale = False
     locale = kw.pop('locale', None)
     no_root = kw.pop('__ckan_no_root', False)
-
-    # Werkzeug adds generates url that includes enviroment variable
-    # SCRIPT_NAME. This means we have conflict with our custom logic
-    # that attaches site_root. Anyway, Werkzeug cannot handle current
-    # locale, so we are going to make some cleanup.
-    is_url_generated_by_werkzeug = kw.pop(
-        '__is_url_generated_by_werkzeug', False
-    )
-    is_script_name_added = False
-
     allowed_locales = ['default'] + i18n.get_locales()
     if locale and locale not in allowed_locales:
         locale = None
@@ -511,21 +497,12 @@ def _local_url(url_to_amend, **kw):
         if locale == 'default':
             default_locale = True
     else:
-        # Test environment doesn't have request object configured
-        # in many cases, that's why next try/except block is required.
         try:
             locale = request.environ.get('CKAN_LANG')
             default_locale = request.environ.get('CKAN_LANG_IS_DEFAULT', True)
-            script_name = request.environ.get('SCRIPT_NAME', None)
-            is_script_name_added = (
-                script_name and url_to_amend.startswith(script_name)
-            )
         except TypeError:
             default_locale = True
 
-    if is_url_generated_by_werkzeug and is_script_name_added:
-        url_to_amend = url_to_amend[len(script_name):]
-
     root = ''
     if kw.get('qualified', False):
         # if qualified is given we want the full url ie http://...
@@ -566,6 +543,7 @@ def _local_url(url_to_amend, **kw):
     if url == '/packages':
         error = 'There is a broken url being created %s' % kw
         raise ckan.exceptions.CkanUrlException(error)
+
     return url
 
 
