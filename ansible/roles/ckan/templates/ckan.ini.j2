[DEFAULT]

debug = {{ debug_enabled }}

[server:main]

use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]

use = egg:ckan
full_stack = true
cache_dir = /tmp/%(ckan.site_id)s/

beaker.session.key = ckan
beaker.session.secret = {{ baker_session_secret }}
beaker.session.secure = True
beaker.session.httponly = True

app_instance_uuid = {{ app_instance_uuid }}

who.config_file = %(here)s/who.ini
who.log_level = warning
who.log_file = %(cache_dir)s/who_log.ini

sqlalchemy.url = postgres://{{ postgres.users.ckan.username }}:{{ postgres.users.ckan.password }}@{{ postgres.server.host }}/{{ postgres.databases.ckan.name }}

ckan.site_url = https://{{ hostname }}
ckan.site_url_internally = https://{{ hostname }}/data/
{% raw %}
ckan.root_path = /data/{{LANG}}
{% endraw %}

ckan.datastore.write_url = postgresql://{{ postgres.users.ckan.username }}:{{ postgres.users.ckan.password }}@{{ postgres.server.host }}/{{ postgres.databases.ckan_datastore.name }}
ckan.datastore.read_url = postgresql://{{ postgres.users.ckan_datastore.username }}:{{ postgres.users.ckan_datastore.password }}@{{ postgres.server.host }}/{{ postgres.databases.ckan_datastore.name }}

ckan.auth.anon_create_dataset = false
ckan.auth.create_unowned_dataset = false
ckan.auth.create_dataset_if_not_in_organization = false
ckan.auth.user_create_groups = true
ckan.auth.user_create_organizations = true
ckan.auth.user_delete_groups = true
ckan.auth.user_delete_organizations = true
ckan.auth.create_user_via_api = false
ckan.auth.create_user_via_web = true
ckan.auth.roles_that_cascade_to_sub_groups = admin

ckan.site_id = {{ ckan_site_id }}

ckan.plugins = {{ ckan_plugins }} {% if google_analytics -%}googleanalytics{%- endif %} {% if AWS.enabled -%} {{ ckan_aws_plugins }} {%- endif %} {{ ckan_plugins_default }}

scheming.dataset_schemas = ckanext.ytp.schemas:dataset.json
                           ckanext.sixodp_showcase.schemas:showcase.json
scheming.presets = ckanext.ytp.schemas:presets.json
                   ckanext.scheming:presets.json
                   ckanext.fluent:presets.json
scheming.group_schemas = ckanext.ytp.schemas:group.json
scheming.organization_schemas = ckanext.ytp.schemas:organization.json

ckan.site_title = Avoindata.fi
ckan.site_logo =
ckan.site_description =

ckan.favicon = /resources/images/logo/favicon.ico
ckan.gravatar_default = identicon

ckan.locale_default = fi
ckan.locale_order = en_GB pt_BR ja it cs_CZ ca es fr el sv sr sr@latin no sk fi ru de pl nl bg ko_KR hu sa sl lv
ckan.locales_offered = fi sv en_GB
ckan.locales_filtered_out = en
ckan.feeds.authority_name =
ckan.feeds.date =
ckan.feeds.author_name =
ckan.feeds.author_link =

ckan.cors.origin_allow_all = True

email_to = {{ error_email }}
error_email_from = {{ error_email_from }}

smtp.server = {{ smtp.server_domain }}
{% if AWS.enabled -%}
smtp.server = {{ AWS.smtp_server_domain }}:587
smtp.user = {{ secret.smtp_user }}
smtp.password = {{ secret.smtp_password }}
smtp.starttls = True
{%- else -%}
smtp.starttls = False
{%- endif %}

smtp.mail_from = no-reply@{{ email_domain }}

ckan.views.default_views = recline_grid_view

ckanext.ytp.drupal.connection = postgres://{{ postgres.users.drupal8.username }}:{{ postgres.users.drupal8.password }}@{{ postgres.server.host }}/{{ postgres.databases.drupal8.name }}

ckan.harvest.mq.type = redis
ckan.harvest.mq.hostname = {{ redis_hostname }}
ckan.harvest.mq.port = {{ redis_port }}
ckan.harvest.mq.redis_db = {{ redis_harvest_database }}

ckanext-archiver.archive_dir = {{ resource_cache_path }}
ckanext-archiver.max_content_length = 50000000
ckanext-archiver.cache_url_root = https://{{ hostname }}/resource_cache/
ckanext-archiver.user_agent_string = {{ hostname }} archiver
ckanext-archiver.archive_cloud = True

ckanext.sixodp_showcasesubmit.creating_user_username = {{ admin.username }}
ckanext.sixodp_showcasesubmit.recaptcha_sitekey = {{ recaptcha_public_key }}
ckanext.sixodp_showcasesubmit.recaptcha_secret = {{ recaptcha_private_key }}
ckanext.sixodp_showcasesubmit.recipient_emails = {{ admin_email }}

disqus.name = {{ disqus_name }}
disqus.notify = True
disqus.notify.name_field = maintainer
disqus.notify.email_field = maintainer_email

ckanext-datarequests.datarequest_notifications_admin_email = None

ckanext.drupal8.domain = {{ hostname }},{{ secondary_hostname }}
ckanext.drupal8.sysadmin_role = {{ drupal_ckan_admin_rolename }}
ckanext.drupal8.connection = postgres://{{ postgres.users.drupal8.username }}:{{ postgres.users.drupal8.password }}@{{ postgres.server.host }}/{{ postgres.databases.drupal8.name }}
ckanext.drupal8.allow_edit = true
{% if not AWS.enabled -%}
ckanext.drupal8.development_cert = /etc/ssl/opendata/server.crt
{%- endif %}

licenses_group_url = file://{{ ckan_files_path }}/license.json
service_classes_options_url = file://{{ ckan_files_path }}/service_classes.json
municipalities_options_url = file://{{ ckan_files_path }}/municipalities.json
life_situation_options_url = file://{{ ckan_files_path }}/life_situations.json
producer_type_options_url = file://{{ ckan_files_path }}/producer_types.json
producer_type_private_options_url = file://{{ ckan_files_path }}/producer_types_private.json
target_group_options_url = file://{{ ckan_files_path }}/target_groups.json

ckanext.ytp.default_organization_name = yksityishenkilo
ckanext.ytp.default_organization_title = Yksityishenkil\u00f6

ckanext.ytp.dataset.service_database_enabled = {% if service_database_enabled -%}true{%- else -%}false{%- endif %}

ckanext.ytp.dataset.auto_author = {% if auto_author_enabled -%}true{%- else -%}false{%- endif %}

ckanext.ytp.theme.logos = default:opendata_fi.png avoindata_default:avoindata_fi.png opendata_default:opendata_en.png avoindata_fi:avoindata_fi.png avoindata_en:avoindata_en.png avoindata_sv:avoindata_se.png opendata_fi:opendata_fi.png opendata_en:opendata_en.png opendata_sv:opendata_se.png

# The email links for reminders will be prefixed with this site url
ckanext.reminder.site_url = https://www.avoindata.fi

# This configuration can be overwritten in the admin configuration UI
# Default address for sending the reminders
ckanext.reminder.email = <YOUR_EMAIL_ADDRESS>

#The field that is checked for the expiry date for reminders
ckanext.reminder.date_field = valid_till

#Fields for recipients name and email
ckanext.reminder.recipient_name = maintainer 
ckanext.reminder.email_field = maintainer_email


{% if AWS.enabled -%}
ckanext.cloudstorage.driver = {{ AWS.region }}
ckanext.cloudstorage.container_name = {{ AWS.ckan_s3_bucket }}
ckanext.cloudstorage.use_secure_urls = 1
{% if AWS.use_iam_role -%}
ckanext.cloudstorage.driver_options = {}
{%- endif %}

{% if not AWS.use_iam_role -%}
ckanext.cloudstorage.driver_options = {"key": "{{ AWS.access_key }}", "secret": "{{ AWS.secret_access_key }}", "token": ""}

{%- endif %}
{%- endif %}



ofs.impl = pairtree

# 2.1 filestore:
ofs.storage_dir = {{ ckan_files_path }}

# 2.2 filestore:
ckan.storage_path = {{ ckan_files_path }}

{% if google_analytics -%}
googleanalytics.id = {{ google_analytics.id }}
googleanalytics.account = {{ google_analytics.account }}
googleanalytics.type = {{ google_analytics.type }}
{%- endif %}

ckanext.spatial.harvest.continue_on_validation_errors = true

ckanext.spatial.common_map.type = custom
ckanext.spatial.common_map.custom.url = https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png
ckanext.spatial.common_map.attribution = Maps &copy; <a href="http://www.wikimedia.org">Wikimedia Foundation</a>, Data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>

solr_url = http://{{ solr_host }}:{{ solr_port }}/solr

ckan.tracking_enabled = true

ckan.max_resource_size = {{ ckan_max_resource_size }}

ckanext.ytp.theme.show_postit_demo = {{ show_postit_demo }}

ckan.datapusher.url = http://127.0.0.1:8800/

[loggers]

keys = root, ckan, ckanext

[handlers]

keys = console

[formatters]

keys = generic

[logger_root]

level = WARNING
handlers = console

[logger_ckan]

level = INFO
handlers = console
qualname = ckan
propagate = 0

[logger_ckanext]

level = DEBUG
handlers = console
qualname = ckanext
propagate = 0

[handler_console]

class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]

format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s

[app:celery]

BROKER_URL = redis://{{ redis_hostname }}:{{ redis_port }}/{{ redis_celery_database }}
CELERY_RESULT_BACKEND = redis://{{ redis_hostname }}:{{ redis_port }}/{{ redis_celery_database }}
CELERY_RESULT_SERIALIZER = json
CELERY_TASK_SERIALIZER = json
BROKER_BACKEND =
BROKER_HOST =
CELERY_RESULT_DBURI =
CELERYD_CONCURRENCY = 1
