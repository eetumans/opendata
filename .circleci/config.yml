version: 2
jobs:
  run-flake8:
    docker:
      - image: circleci/python:2.7.15

    working_directory: ~/repo

    steps:
      - checkout
      - run: git submodule update --init --recursive

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "codestyle-requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install codestyle requirements
          command: |
            mkdir -p ./venv
            virtualenv ./venv
            . venv/bin/activate
            pip install -r codestyle-requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "codestyle-requirements.txt" }}

      - run:
          name: run linting
          command: |
            . venv/bin/activate
            flake8 modules --max-line-length=140

  run-ansible-lint:
    docker:
      - image: circleci/python

    steps:
      - checkout

      - run: sudo pip install ansible-lint

      - run:
          name: Run ansible-lint for single-server.yml
          command: ansible-lint single-server.yml
          working_directory: ~/project/ansible/

  run-ansible-role-test:
    docker:
      - image: circleci/python

    steps:
      - checkout

      - run: git submodule update --init --recursive

      - run: sudo pip install ansible boto awscli

      - run:
          name: Copy private key for ec2 usage
          command: aws s3 cp --quiet s3://$AWS_PRIVATE_KEY_S3_PATH ~/.ssh/id_rsa
          working_directory: ~/project/

      - run:
          name: Run build test playbook
          command: "ansible-playbook --skip-tags 'non-local,postfix' ansible/cirlcleci_build_test.yml >>cirlcleci_build_test.log 2>&1"
          no_output_timeout: 60m
          working_directory: ~/project/

      - store_artifacts:
          path: cirlcleci_build_test.log

        # If there is a syntax error or some other issue in the actual build test
        # playbook the cleanup part might not get executed. Therefore additional
        # cleanup task to ensure that created instances will be terminated.
      - run:
          name: Additional cleanup for EC2 instances
          command: "ansible-playbook ansible/circleci_cleanup.yml"
          working_directory: ~/project/
          when: always


workflows:
  version: 2
  lint-all:
    jobs:
      - run-flake8
      - run-ansible-lint
      - run-ansible-role-test
