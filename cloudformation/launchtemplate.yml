AWSTemplateFormatVersion: "2010-09-09"
Description: opendata instance launch template and autoscale group

Parameters:
  EnvironmentName:
    Description: Name of the environment (infratest, beta, prod)
    Type: 'AWS::SSM::Parameter::Value<String>'
  AmiImageId:
    Description: AMI image ID to use for launch template
    Type: 'AWS::SSM::Parameter::Value<String>'
  InstanceType:
    Description: EC2 instance type for the application servers
    Type: 'AWS::SSM::Parameter::Value<String>'
  AsgMaxSize:
    Description: Maximum size of ASG
    Type: 'AWS::SSM::Parameter::Value<String>'
  AsgMinSize:
    Description: Minimum size of ASG
    Type: 'AWS::SSM::Parameter::Value<String>'


Resources:
  InstanceLaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateData:
        SecurityGroups:
          BlockDeviceMappings:
            - DeviceName: /dev/sda1
              Ebs:
                VolumeType: gp2
                VolumeSize: 20
                DeleteOnTermination: true
      IamInstanceProfile: !ImportValue avoindata-${EnvironmentName}-instanceprofile
      ImageId: !Ref AmiImageId
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !ImportValue avoindata-${EnvironmentName}-instancesecuritygroupid
      UserData: !Base64
        "Fn::Sub": |
          #!/bin/bash

          echo '${EFSFileSystem}.efs.${AWS::Region}.amazonaws.com:/ /mnt nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev,x-systemd.after=network-online.target,nofail 0 0' >>/etc/fstab
          echo '/mnt/ytp_files /srv/ytp/files none defaults,bind,nofail,x-systemd.after=mnt.mount 0 0' >>/etc/fstab
          mount -a -t nfs4
          mkdir -p /srv/ytp/files /mnt/ytp_files
          mount /srv/ytp/files
          aws s3 cp s3://avoindata-secrets/${EnvironmentName}/secrets.yml /root/avoindata-secrets/${EnvironmentName}/secrets.yml
          aws s3 cp s3://avoindata-secrets/${EnvironmentName}/.npmrc /root/avoindata-secrets/${EnvironmentName}/.npmrc
          aws s3 cp s3://avoindata-secrets/${EnvironmentName}/token.dat /root/avoindata-secrets/${EnvironmentName}/token.dat
          chmod -R go-rwx /root/avoindata-secrets/*
          cd /root/ytp/ansible
          ansible-playbook -i inventories/${EnvironmentName} single-server.yml --tags configure
  
  AutoScalingGroup: 
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub avoindata-${EnvironmentName}-autoscaling-group
      LaunchTemplate:
        LauncTemplateId: !Ref InstanceLaunchTemplate
      TargetGroupARNs:
        - !ImportValue avoindata-${EnvironmentName}-publicalbtargetgrouparn
      MaxSize: !Ref MaxSize
      MinSize: !Ref MinSize
      VPCZoneIdentifier: 
        - !ImportValue vpc-SubnetsPublic