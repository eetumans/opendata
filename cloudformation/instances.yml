AWSTemplateFormatVersion: "2010-09-09"
Description: opendata application infrastructure

Parameters:
  EnvironmentName:
    Description: Name of the environment (infratest, dev, alpha, beta, www, prod)
    Type: 'AWS::SSM::Parameter::Value<String>'
  DatabaseSecurityGroup:
    Description: Security group of the RDS database
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::SecurityGroup::Id>'
  EFSFileSystem:
    Description: Name of the EFS filesystem
    Type: 'AWS::SSM::Parameter::Value<String>'
  EFSSecurityGroup:
    Description: Security group of the EFS filesystem
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::SecurityGroup::Id>'
  HostedZoneId:
    Description: Zone ID for the DNS record
    Type: 'AWS::SSM::Parameter::Value<AWS::Route53::HostedZone::Id>'
  HostedZoneIdAlternate:
    Description: "[Optional] Zone ID for the DNS record"
    Type: 'AWS::SSM::Parameter::Value<String>'
  NumberOfSubnets:
    Description: Number of subnets. This must match your selections in the list of load balancer subnets below.
    Type: 'AWS::SSM::Parameter::Value<String>'
  PublicALBSubnets:
    Description: The subnets to attach to the load balancer
    Type: AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>
  PrivateALBSubnets:
    Description: The subnets to attach to the load balancer
    Type: AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>
  PublicALBCertificate:
    Description: 'The AWS Certification Manager certificate ARN for the ALB certificate'
    Type: 'AWS::SSM::Parameter::Value<String>'
  Vpc:
    Description: Select an existing Vpc
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>'

Conditions:
  NumberOfSubnets1:
      !Equals [ 1, !Ref NumberOfSubnets ]
  NumberOfSubnets2:
      !Equals [ 2, !Ref NumberOfSubnets ]
  NumberOfSubnets3:
      !Equals [ 3, !Ref NumberOfSubnets ]
  NumberOfSubnets4:
      !Equals [ 4, !Ref NumberOfSubnets ]
  NumberOfSubnets5:
      !Equals [ 5, !Ref NumberOfSubnets ]
  NumberOfSubnets6:
      !Equals [ 6, !Ref NumberOfSubnets ]
  CreateAlternateDomainRecord: !Not [!Equals [!Ref HostedZoneIdAlternate, ""]]

Resources:
  WebInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP
      SecurityGroupIngress:
        - FromPort: 80
          ToPort: 80
          IpProtocol: tcp
          SourceSecurityGroupId: !Ref PublicALBSecurityGroup
      VpcId: !Ref Vpc

  ScheduledInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Solr and Redis from private ALB
      SecurityGroupIngress:
        - FromPort: 8983
          ToPort: 8983
          IpProtocol: tcp
          SourceSecurityGroupId: !Ref PrivateALBSecurityGroup
        - FromPort: 6379
          ToPort: 6379
          IpProtocol: tcp
          SourceSecurityGroupId: !Ref PrivateALBSecurityGroup
      VpcId: !Ref Vpc

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Common instance security group
      VpcId: !Ref Vpc

  DatabaseIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      GroupId: !Ref DatabaseSecurityGroup
      SourceSecurityGroupId: !Ref InstanceSecurityGroup

  EFSIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: 2049
      ToPort: 2049
      GroupId: !Ref EFSSecurityGroup
      SourceSecurityGroupId: !Ref InstanceSecurityGroup

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: ec2.amazonaws.com
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource: !Sub "arn:aws:s3:::avoindata-secrets/${EnvironmentName}/*"
              - Effect: Allow
                Action: "*"
                Resource:
                  - !Sub "arn:aws:s3:::avoindata-${EnvironmentName}-datasets"
                  - !Sub "arn:aws:s3:::avoindata-${EnvironmentName}-datasets/*"
              - Effect: Allow
                Action:
                  - ssm:DescribeAssociation
                  - ssm:GetDeployablePatchSnapshotForInstance
                  - ssm:GetDocument
                  - ssm:GetManifest
                  - ssm:GetParameters
                  - ssm:ListAssociations
                  - ssm:ListInstanceAssociations
                  - ssm:PutInventory
                  - ssm:PutComplianceItems
                  - ssm:PutConfigurePackageResult
                  - ssm:UpdateAssociationStatus
                  - ssm:UpdateInstanceAssociationStatus
                  - ssm:UpdateInstanceInformation
                Resource: "*"
              - Effect: Allow
                Action:
                  - ssmmessages:CreateControlChannel
                  - ssmmessages:CreateDataChannel
                  - ssmmessages:OpenControlChannel
                  - ssmmessages:OpenDataChannel
                Resource: "*"
              - Effect: Allow
                Action:
                  - ec2messages:AcknowledgeMessage
                  - ec2messages:DeleteMessage
                  - ec2messages:FailMessage
                  - ec2messages:GetEndpoint
                  - ec2messages:GetMessages
                  - ec2messages:SendReply
                Resource: "*"
              - Effect: Allow
                Action:
                  - autoscaling:Describe*
                Resource: "*"
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: "*"
              - Effect: Allow
                Action:
                  - ec2:DescribeInstanceStatus
                Resource: "*"
              - Effect: Allow
                Action:
                  - ds:CreateComputer
                  - ds:DescribeDirectories
                Resource: "*"
              - Effect: Allow
                Action: 
                  - ec2:DescribeTags
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:${EnvironmentName}-web"
              - Effect: Allow
                Action:
                  - s3:GetEncryptionConfiguration
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - arn:aws:s3:::aws-ssm-eu-west-1/*
                  - arn:aws:s3:::aws-windows-downloads-eu-west-1/*
                  - arn:aws:s3:::amazon-ssm-eu-west-1/*
                  - arn:aws:s3:::amazon-ssm-packages-eu-west-1/*
                  - arn:aws:s3:::eu-west-1-birdwatcher-prod/*
              - Effect: Allow
                Action:
                  - autoscaling:CompleteLifecycleAction
                Resource: !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/avoindata-${EnvironmentName}-autoscaling-group"

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  PrivateALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: !Sub avoindata-${EnvironmentName}-solrredis-lb
      Scheme: internal
      SecurityGroups:
        - !Ref PrivateALBSecurityGroup
      Subnets:
        !If
          [ NumberOfSubnets1,
          [ !Select [ 0, !Ref PrivateALBSubnets ] ],
          !If
            [ NumberOfSubnets2,
            [ !Select [ 0, !Ref PrivateALBSubnets ], !Select [ 1, !Ref PrivateALBSubnets ] ],
            !If
              [ NumberOfSubnets3,
              [ !Select [ 0, !Ref PrivateALBSubnets ], !Select [ 1, !Ref PrivateALBSubnets ], !Select [ 2, !Ref PrivateALBSubnets ] ],
              !If
                [ NumberOfSubnets4,
                [ !Select [ 0, !Ref PrivateALBSubnets ], !Select [ 1, !Ref PrivateALBSubnets ], !Select [ 2, !Ref PrivateALBSubnets ], !Select [ 3, !Ref PrivateALBSubnets ] ],
                !If
                  [ NumberOfSubnets5,
                  [ !Select [ 0, !Ref PrivateALBSubnets ], !Select [ 1, !Ref PrivateALBSubnets ], !Select [ 2, !Ref PrivateALBSubnets ], !Select [ 3, !Ref PrivateALBSubnets ], !Select [ 4, !Ref PrivateALBSubnets ] ],
                  [ !Select [ 0, !Ref PrivateALBSubnets ], !Select [ 1, !Ref PrivateALBSubnets ], !Select [ 2, !Ref PrivateALBSubnets ], !Select [ 3, !Ref PrivateALBSubnets ], !Select [ 4, !Ref PrivateALBSubnets ], !Select [ 5, !Ref PrivateALBSubnets ] ]
                  ]
                ]
              ]
            ]
          ]
      Tags:
        - Key: Name
          Value: !Sub avoindata-${EnvironmentName}-solrredis-lb

  PublicALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: !Sub avoindata-${EnvironmentName}-web-lb
      Scheme: internet-facing
      SecurityGroups:
        - !Ref PublicALBSecurityGroup
      Subnets:
        !If
          [ NumberOfSubnets1,
          [ !Select [ 0, !Ref PublicALBSubnets ] ],
          !If
            [ NumberOfSubnets2,
            [ !Select [ 0, !Ref PublicALBSubnets ], !Select [ 1, !Ref PublicALBSubnets ] ],
            !If
              [ NumberOfSubnets3,
              [ !Select [ 0, !Ref PublicALBSubnets ], !Select [ 1, !Ref PublicALBSubnets ], !Select [ 2, !Ref PublicALBSubnets ] ],
              !If
                [ NumberOfSubnets4,
                [ !Select [ 0, !Ref PublicALBSubnets ], !Select [ 1, !Ref PublicALBSubnets ], !Select [ 2, !Ref PublicALBSubnets ], !Select [ 3, !Ref PublicALBSubnets ] ],
                !If
                  [ NumberOfSubnets5,
                  [ !Select [ 0, !Ref PublicALBSubnets ], !Select [ 1, !Ref PublicALBSubnets ], !Select [ 2, !Ref PublicALBSubnets ], !Select [ 3, !Ref PublicALBSubnets ], !Select [ 4, !Ref PublicALBSubnets ] ],
                  [ !Select [ 0, !Ref PublicALBSubnets ], !Select [ 1, !Ref PublicALBSubnets ], !Select [ 2, !Ref PublicALBSubnets ], !Select [ 3, !Ref PublicALBSubnets ], !Select [ 4, !Ref PublicALBSubnets ], !Select [ 5, !Ref PublicALBSubnets ] ]
                  ]
                ]
              ]
            ]
          ]
      Tags:
        - Key: Name
          Value: !Sub avoindata-${EnvironmentName}-web-lb

  PublicALBListenerSslCertificate:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Ref PublicALBCertificate
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref PublicALBTargetGroupHTTP
      LoadBalancerArn: !Ref PublicALB
      Port: 443
      Protocol: HTTPS

  PublicALBTargetGroupHTTP:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: '80'
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '301'
      Name: !Sub avoindata-${EnvironmentName}-tg-http
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: !Sub avoindata-${EnvironmentName}-loadbalancer-targetGroup-http
      UnhealthyThresholdCount: 2
      VpcId: !Ref Vpc

  PrivateALBTargetGroupSolr:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: '8983'
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: !Sub avoindata-${EnvironmentName}-tg-solr
      Port: 8983
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: !Sub avoindata-${EnvironmentName}-loadbalancer-targetGroup-solr
      UnhealthyThresholdCount: 2
      VpcId: !Ref Vpc

  PrivateALBTargetGroupRedis:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPort: '6379'
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Name: !Sub avoindata-${EnvironmentName}-tg-redis
      Port: 6379
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: !Sub avoindata-${EnvironmentName}-loadbalancer-targetGroup-redis
      UnhealthyThresholdCount: 2
      VpcId: !Ref Vpc

  PublicALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTPS from everywhere
      SecurityGroupIngress:
        - FromPort: 443
          ToPort: 443
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
      VpcId: !Ref Vpc

  PrivateALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Solr and Redis access from instances
      SecurityGroupIngress:
        - FromPort: 8983
          ToPort: 8983
          IpProtocol: tcp
          SourceSecurityGroupId: !Ref InstanceSecurityGroup
        - FromPort: 6379
          ToPort: 6379
          IpProtocol: tcp
          SourceSecurityGroupId: !Ref InstanceSecurityGroup
      VpcId: !Ref Vpc

  PublicALBDNSNameParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub /${EnvironmentName}/web/public_alb_address
      Type: "String"
      Value: !GetAtt PublicALB.DNSName

  PrivateALBDNSNameParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub /${EnvironmentName}/scheduled/private_alb_address
      Type: "String"
      Value: !GetAtt PrivateALB.DNSName

  PublicALBARN:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub /${EnvironmentName}/web/public_alb_arn
      Type: "String"
      Value: !Ref PublicALB

Outputs:
  PublicALBDNSName:
    Value: !GetAtt PublicALB.DNSName
  InstanceProfileArn:
    Description: Instance profile ARN
    Value: !GetAtt InstanceProfile.Arn
    Export:
      Name: !Sub avoindata-${EnvironmentName}-instanceprofile
  InstanceSecurityGroup:
    Description: ID of instance security group for all instances
    Value: !Ref InstanceSecurityGroup
    Export:
      Name: !Sub avoindata-${EnvironmentName}-instancesecuritygroupid
  WebInstanceSecurityGroup:
    Description: ID of web instance security group
    Value: !Ref WebInstanceSecurityGroup
    Export:
      Name: !Sub avoindata-${EnvironmentName}-web-instancesecuritygroupid
  ScheduledInstanceSecurityGroup:
    Description: ID of scheduled instance security group
    Value: !Ref ScheduledInstanceSecurityGroup
    Export:
      Name: !Sub avoindata-${EnvironmentName}-scheduled-instancesecuritygroupid
  PublicALBTargetGroupArn:
    Description: ARN of target group for public ALB
    Value: !Ref PublicALBTargetGroupHTTP
    Export:
      Name: !Sub avoindata-${EnvironmentName}-publicalbtargetgrouparn
  PrivateALBTargetGroupSolrArn:
    Description: ARN of target group for private ALB (solr)
    Value: !Ref PrivateALBTargetGroupSolr
    Export:
      Name: !Sub avoindata-${EnvironmentName}-solralbtargetgrouparn
  PrivateALBTargetGroupRedisArn:
    Description: ARN of target group for private ALB (redis)
    Value: !Ref PrivateALBTargetGroupRedis
    Export:
      Name: !Sub avoindata-${EnvironmentName}-redisalbtargetgrouparn