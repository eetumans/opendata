<?php

/**
 * @file
 * Adds dataset list component.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function avoindata_datasetlists_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.avoindata_datasetlist':
      return t('
        Creates dataset list module.
      ');
  }
}

/**
 * Implements hook_theme().
 */
function avoindata_datasetlist_theme($existing, $type, $theme, $path) {
  return [
    'avoindata_datasetlist' => [
      'variables' => [
        'recentdatasets' => NULL,
        'newdatasets' => NULL,
        'populardatasets' => NULL,
        'language' => NULL,
      ],
      'template' => 'avoindata_datasetlist_block',
    ],
  ];
}

function avoindata_recent_datasets() {
  $client = \Drupal::httpClient();
  try {
    $recentDatasetsResponse = $client->request('GET', 'http://localhost:8080/data/api/action/package_search?sort=metadata_modified%20desc&facet.limit=1&rows=5');
    $recentDatasetsResult = Json::decode($recentDatasetsResponse->getBody());
    $recentDatasets = $recentDatasetsResult['result']['results'];  
  }
  catch (\Exception $e) {
    $recentDatasets = NULL;
  }

  return [
    '#markup' => $recentDatasets,
    '#cache' => ['max-age' => 0],
  ];
}

function avoindata_new_datasets() {
  $client = \Drupal::httpClient();

  try {
    $newDatasetsResponse = $client->request('GET', 'http://localhost:8080/data/api/action/package_search?sort=metadata_created%20desc&facet.limit=1&rows=5');
    $newDatasetsResult = Json::decode($newDatasetsResponse->getBody());
    $newDatasets = $newDatasetsResult['result']['results'];
  }
  catch (\Exception $e) {
    $newDatasets = NULL;
  }

  return [
    '#markup' => $newDatasets,
    '#cache' => ['max-age' => 0],
  ];

  
}

function avoindata_popular_datasets() {
  $client = \Drupal::httpClient();

  try {
    $popularDatasetsResponse = $client->request('GET', 'http://localhost:8080/data/api/action/package_search?sort=views_recent%20desc&facet.limit=1&rows=5');
    $popularDatasetsResult = Json::decode($popularDatasetsResponse->getBody());
    $popularDatasets = $popularDatasetsResult['result']['results'];
  }
  catch (\Exception $e) {
    $popularDatasets = NULL;
  }

  return [
    '#markup' => $popularDatasets,
    '#cache' => ['max-age' => 0],
  ];
}
