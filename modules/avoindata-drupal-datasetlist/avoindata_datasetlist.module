<?php

/**
 * @file
 * Adds dataset list component.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Component\Serialization\Json;

/**
 * Implements hook_help().
 */
function avoindata_datasetlists_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.avoindata_datasetlist':
      return t('
        Creates dataset list module.
      ');
  }
}

/**
 * Implements hook_theme().
 */
function avoindata_datasetlist_theme($existing, $type, $theme, $path) {
  return [
    'avoindata_datasetlist' => [
      'variables' => [
        'recentdatasets' => NULL,
        'newdatasets' => NULL,
        'populardatasets' => NULL,
        'language' => NULL,
      ],
      'template' => 'avoindata_datasetlist_block',
    ],
  ];
}

/**
 * Returns a number of HTML table rows based on the list of datasets given.
 */
function create_dataset_table_rows($dataset_list, $date_type) {
  $currentLang = \Drupal::languageManager()->getCurrentLanguage()->getId();

  $resultHTML = '';
  $field_for_date = ($date_type ? $date_type : 'metadata_created');

  if (count($dataset_list) > 0) {
    foreach ($dataset_list as $dataset) {
      $created_date = date('d.m.Y', strtotime($dataset[$field_for_date]));
      $translated_title = (
        $dataset['title_translated'][$currentLang]
          ? $dataset['title_translated'][$currentLang]
          : $dataset['title_translated']['fi']
      );
      $resultHTML .= <<<EOT
      <tr>
        <td><a href="/data/fi/dataset/{$dataset['name']}"> {$translated_title} </a></td>
        <td>{$dataset['owner']}</td>
        <td>{$created_date}</td>
      </tr>
EOT;
    }
  }
  return $resultHTML;
}

/**
 * Gets recent datasets from Ckan and specifies that they won't be cached.
 */
function avoindata_recent_datasets() {
  $client = \Drupal::httpClient();
  try {
    $recentDatasetsResponse = $client->request('GET',
      'http://localhost:8080/data/api/action/package_search?sort=metadata_modified%20desc&facet.limit=1&rows=5'
    );
    $recentDatasetsResult = Json::decode($recentDatasetsResponse->getBody());
    $recentDatasets = $recentDatasetsResult['result']['results'];
  }
  catch (\Exception $e) {
    $recentDatasets = NULL;
  }

  return [
    '#markup' => create_dataset_table_rows($recentDatasets, 'metadata_modified'),
    '#cache' => ['max-age' => 0],
  ];
}

/**
 * Gets new datasets from Ckan and specifies that they won't be cached.
 */
function avoindata_new_datasets() {
  $client = \Drupal::httpClient();
  try {
    $newDatasetsResponse = $client->request('GET',
      'http://localhost:8080/data/api/action/package_search?sort=metadata_created%20desc&facet.limit=1&rows=5'
    );
    $newDatasetsResult = Json::decode($newDatasetsResponse->getBody());
    $newDatasets = $newDatasetsResult['result']['results'];
  }
  catch (\Exception $e) {
    $newDatasets = NULL;
  }

  return [
    '#markup' => create_dataset_table_rows($newDatasets),
    '#cache' => ['max-age' => 0],
  ];
}

/**
 * Gets popular datasets from Ckan and specifies that they won't be cached.
 */
function avoindata_popular_datasets() {
  $client = \Drupal::httpClient();
  try {
    $popularDatasetsResponse = $client->request('GET',
      'http://localhost:8080/data/api/action/package_search?sort=views_recent%20desc&facet.limit=1&rows=5'
    );
    $popularDatasetsResult = Json::decode($popularDatasetsResponse->getBody());
    $popularDatasets = $popularDatasetsResult['result']['results'];
  }
  catch (\Exception $e) {
    $popularDatasets = NULL;
  }

  return [
    '#markup' => create_dataset_table_rows($popularDatasets),
    '#cache' => ['max-age' => 0],
  ];
}
