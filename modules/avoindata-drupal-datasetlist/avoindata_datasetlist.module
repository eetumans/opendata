<?php

/**
 * @file
 * Adds dataset list component.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Component\Serialization\Json;

/**
 * Implements hook_help().
 */
function avoindata_datasetlists_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.avoindata_datasetlist':
      return t('
        Creates dataset list module.
      ');
  }
}

/**
 * Implements hook_theme().
 */
function avoindata_datasetlist_theme($existing, $type, $theme, $path) {
  return [
    'avoindata_datasetlist' => [
      'variables' => [
        'recentdatasets' => NULL,
        'newdatasets' => NULL,
        'populardatasets' => NULL,
        'language' => NULL,
      ],
      'template' => 'avoindata_datasetlist_block',
    ],
  ];
}

function avoindata_recent_datasets() {
  $client = \Drupal::httpClient();
  try {
    $recentDatasetsResponse = $client->request('GET', 'http://localhost:8080/data/api/action/package_search?sort=metadata_modified%20desc&facet.limit=1&rows=5');
    $recentDatasetsResult = Json::decode($recentDatasetsResponse->getBody());
    $recentDatasets = $recentDatasetsResult['result']['results'];  
  }
  catch (\Exception $e) {
    $recentDatasets = NULL;
  }
  if(count($recentDatasets) > 0){
    $resultHTML = <<<EOT
    <table class="table">
    <tr>
      <th>
        { t('name') }
      </th>
      <th>
        {% trans %}
        Owner
        {% endtrans %}
      </th>
      <th>
        {% trans %}
        Release date
        {% endtrans %}
      </th>
    </tr>
EOT;
    foreach($recentDatasets as $dataset) {
      $datasetRows.= <<<EOT
    <tr>
      <td><a href="/data/fi/dataset/{$dataset['name']}"> {$dataset['title_translated']['fi']} </a></td>
      <td>{$dataset['owner']}</td>
      <td>{$dataset['metadata_created']}</td>
    </tr>
EOT;
    }
    $resultHTML.= $datasetRows;
    $resultHTML.= <<<EOT
    </table>
          <div class="row avoindata-datasetlist-links">
              <a class="pull-right" href="/data/{{ language }}/dataset?q=&sort=metadata_modified+desc">
                <i class="fas fa-arrow-right"></i>
                {% trans %}
                More recently modified datasets
                {% endtrans %}
              </a>
            </div>
EOT;
  } else {
      $resultHTML = <<<EOT
      <h4>
        {% trans %}
        No recently modified data sets found
        {% endtrans %}
      </h4>
EOT;
  }
 
EOT;
  return [
    '#markup' => $resultHTML,
    '#cache' => ['max-age' => 0],
  ];
}

function avoindata_new_datasets() {
  $client = \Drupal::httpClient();

  try {
    $newDatasetsResponse = $client->request('GET', 'http://localhost:8080/data/api/action/package_search?sort=metadata_created%20desc&facet.limit=1&rows=5');
    $newDatasetsResult = Json::decode($newDatasetsResponse->getBody());
    $newDatasets = $newDatasetsResult['result']['results'];
  }
  catch (\Exception $e) {
    $newDatasets = NULL;
  }

  return [
    '#markup' => $newDatasets,
    '#cache' => ['max-age' => 0],
  ];

  
}

function avoindata_popular_datasets() {
  $client = \Drupal::httpClient();

  try {
    $popularDatasetsResponse = $client->request('GET', 'http://localhost:8080/data/api/action/package_search?sort=views_recent%20desc&facet.limit=1&rows=5');
    $popularDatasetsResult = Json::decode($popularDatasetsResponse->getBody());
    $popularDatasets = $popularDatasetsResult['result']['results'];
  }
  catch (\Exception $e) {
    $popularDatasets = NULL;
  }

  return [
    '#markup' => $popularDatasets,
    '#cache' => ['max-age' => 0],
  ];
}
